// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package main

import (
	"context"
	"github.com/almaznur91/splitty/internal/bot"
	"github.com/almaznur91/splitty/internal/events"
	"github.com/almaznur91/splitty/internal/repository"
	"github.com/almaznur91/splitty/internal/service"
)

// Injectors from wire.go:

func initApp(ctx context.Context, cfg *config) (*events.TelegramListener, func(), error) {
	botConfig := initBotConfig(cfg)
	botAPI, err := initTelegramApi(cfg, botConfig)
	if err != nil {
		return nil, nil, err
	}
	database, cleanup, err := initMongoConnection(ctx, cfg)
	if err != nil {
		return nil, nil, err
	}
	mongoUserRepository := repository.NewUserRepository(database)
	userService := service.NewUserService(mongoUserRepository)
	mongoRoomRepository := repository.NewRoomRepository(database)
	roomService := service.NewRoomService(mongoRoomRepository)
	start := bot.NewStart(userService, roomService, botConfig)
	room := bot.NewRoom(userService, roomService, botConfig)
	mongoChatStateRepository := repository.NewChatStateRepository(database)
	chatStateService := service.NewChatStateService(mongoChatStateRepository)
	mongoButtonRepository := repository.NewButtonRepository(database)
	buttonService := service.NewButtonService(mongoButtonRepository)
	startScreen := bot.NewStartScreen(chatStateService, buttonService, botConfig)
	roomCreating := bot.NewRoomCreating(chatStateService, buttonService, botConfig)
	roomSetName := bot.NewRoomSetName(chatStateService, buttonService, roomService, botConfig)
	joinRoom := bot.NewJoinRoom(chatStateService, buttonService, roomService)
	v := ProvideBotList(start, room, startScreen, roomCreating, roomSetName, joinRoom)
	telegramListener, err := initTelegramConfig(botAPI, v, buttonService, chatStateService)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	return telegramListener, func() {
		cleanup()
	}, nil
}

// wire.go:

func ProvideBotList(start *bot.Start, room *bot.Room, startScreen *bot.StartScreen, rc *bot.RoomCreating, rsn *bot.RoomSetName, jr *bot.JoinRoom) []bot.Interface {
	return []bot.Interface{start, room, startScreen, rc, rsn, jr}
}
